@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <div class="d-flex justify-content-center">
                        <div>
                            Please Wait...
                        </div>
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </Authorizing>
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p>You are not authorized to access this resource.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    protected override void OnInitialized()
    {
        // Force the www on the url to avoid bugs
        if (!Navigation.BaseUri.Contains("localhost")
            && !Navigation.BaseUri.Contains("www"))
        {
            var newUrl = Navigation.Uri.Replace("https://", "https://www.");
            Navigation.NavigateTo(newUrl);
        }

        // Using "roman015.com/?" to redirect external pages to index.html initially
        if (Navigation.Uri.Contains("/?"))
        {
            var newUrl = Navigation.Uri.Replace("/?", "/");
            Navigation.NavigateTo(newUrl);
        }
    }
}
