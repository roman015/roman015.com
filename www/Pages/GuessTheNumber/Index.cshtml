@page
@{
    ViewData["Title"] = "Guess The Number";

    int min = 0;
    int max = 100;
    int guess = 0;
    int guessCount = 0;
    int answer = new Random().Next(min, max);
    string guessStatus = string.Empty;    
    bool isGameOver = false;

    if(Request.Method == "POST")
    {
        // Reset Get Game state, if state cannot be read or if isGameOver is marked
        if( 
            (
                !int.TryParse(Request.Form["min"],out min)
                || !int.TryParse(Request.Form["max"],out max)
                || !int.TryParse(Request.Form["answer"],out answer)
                || !int.TryParse(Request.Form["guessCount"],out guessCount)
                || !bool.TryParse(Request.Form["isGameOver"], out isGameOver)
            )
            || 
            (
                isGameOver
            )
        )
        {            
            // Reset Game State
            min = 0;
            max = 100;
            answer = new Random().Next(min, max);
            guessCount = 0;
            isGameOver = false;
            guessStatus = string.Empty;
        }

        // Process Game based on game state
        if(int.TryParse(Request.Form["guess"], out guess))
        {
            if(answer == guess)
            {
                guessStatus = "Congrats, you guessed right! " + answer + " is the number!";
                isGameOver = true;
                min = 0;
                max = 100;
            }
            else
            {
                guessStatus = "Wrong, try again!";
                isGameOver = false;

                if(guess >= min && guess <= max)
                {
                    min = guess < answer ? guess : min;
                    max = guess > answer ? guess : max; 
                }
            }

            guessCount++;
        }                 
    }
    
}
<h1>@ViewData["Title"]</h1>

<br/>

<div class="container">
    <form method="post">
        @if(!string.IsNullOrWhiteSpace(guessStatus))
        {
            <div class="form-group">
                <label>@guessStatus</label>
            </div>
        }

        <div class="form-group">
            @{
                if(guessCount > 0)
                {
                    if(answer == guess)
                    {
                        <label>@answer was guessed in @guessCount guesses</label>
                    }
                    else
                    {
                        <label>@guessCount @(guessCount > 1 ? "guesses" : "guess") made so far</label>
                    }
                }
            }
        </div>                

        <div class="form-group">
            <input type="number" name="guess" class="form-control" autofocus="autofocus"
                min="@min"
                max="@max"
                step="1" 
                value="" 
                placeholder="Enter A Value Between @min and @max here @(isGameOver ? "to start a new game" : string.Empty)" 
                title="Guess the number between @min and @max" />

            <input type="hidden" name="answer" value="@answer"/>
            <input type="hidden" name="min" value="@min"/>
            <input type="hidden" name="max" value="@max"/>
            <input type="hidden" name="guessCount" value="@guessCount"/>
            <input type="hidden" name="isGameOver" value="@isGameOver.ToString()"/>
        </div>
        <div class="form-group">
            <button class="btn btn-success">Submit</button>                        
        </div> 

        @if(answer == guess)
        {
            <div class="form-group">
                <label><small>(Input a number to play again)</small></label>
            </div>
        }       
    </form>    
</div>
