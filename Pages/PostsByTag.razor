@page "/tags/{tagName}"

@inject HttpClient Http

<MainTitle Name='@("Tag : " + tagName.Replace("-", " "))'/>

<div class="container">
    <div class="row">
        <div class="col-sm-8 right-border">
            <div>
                <ul class="pager" style="text-align:left">
                    <li class='prev'>
                        <a href="/">← Home</a>
                    </li>
                </ul>
            </div>
            <PostList Posts="@Posts" />
        </div>
        <div class="col-sm-4 sidebar">
            <hr class="visible-xs-block">

            <h5>All Tags</h5>
            <div>
                <TagList Tags="@Tags" />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string tagName { get; set; }

    public List<Models.Post> Posts { get; set; } = new List<Models.Post>();
    public List<string> Tags { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await GetLatestPosts(tagName);
        await GetAllTags();
    }

    private async Task GetLatestPosts(string tagname = "")
    {
        string testUrl = "/test/GetPostsForPreview.json";
        string requestUrl = "https://api.roman015.com/BlogViewer/GetAllPostsWithTags?tags=" + tagname.Replace("-", " ");

        if (Http.BaseAddress.Host.Contains("localhost"))
        {
            requestUrl = testUrl;
        }

        Posts = null;

        await Http.GetFromJsonAsync<List<Models.Post>>(requestUrl)
        .ContinueWith((val) =>
        {
            Posts = val.Result;
        });
    }

    private async Task GetAllTags()
    {
        string testUrl = "/test/GetAllTags.json";
        string requestUrl = "https://api.roman015.com/BlogViewer/GetAllTags";

        if (Http.BaseAddress.Host.Contains("localhost"))
        {
            requestUrl = testUrl;
        }

        await Http.GetFromJsonAsync<List<string>>(requestUrl)
            .ContinueWith((val) =>
            {
                Tags = val.Result;
            });
    }
}
